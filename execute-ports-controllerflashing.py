#!/usr/bin/env python
# -*- coding: utf-8 -*-


import os
import sys
from time import sleep as sleep
import time
from pythonfunctions import mkdir as mkdir
from pythonfunctions import find as find
from pythonfunctions import loadconfig as loadconfig
from pythonfunctions import getVars as getVars
from pythonfunctions import arduinocompile as arduinocompile

#arduinocompile()


f_flashsh = getVars('f_flashsh')
os.system('chmod +x ' + f_flashsh)

bvers, xres, yres = loadconfig()

d_prec = getVars('d_precpt')


files = find(d_prec, 0, 100)
for hexfile in files:
	if not hexfile.endswith('.hex'):
		print('No .hex file')
		sys.exit()
	content = '#!/bin/bash \n \n #generated by execute-ports-controllerflashing.py \n \n' + f_flashsh + ' ' + hexfile
	fname = os.path.basename(hexfile)
	ports = '/home/pi/RetroPie/roms/ports'
	mkdir(ports)
	portfile = os.path.join(ports, fname + '.sh')
	if not os.path.isfile(portfile):
		with open(portfile, 'w') as pfile:
			pfile.write(content)
		print('Generate:')
		print(content)
		os.system('chmod +x ' + portfile)
	else:
		print('Executable file exists, skipping')
